<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context.xsd">
                 
          
          
          
    <!-- 
    	组件扫描,即获取含有指定注释的类为为bean;
    	可以扫描controller,service..。
    -->
    <context:component-scan base-package="com.zk.smm.controller"></context:component-scan>      
	
	
	<!-- *配置handler -->
    <bean name="/selectItems0.action" class="com.zk.smm.controller.ItemsHandlerController0"></bean>
    
    <bean id="ItemsHandlerController1" class="com.zk.smm.controller.ItemsHandlerController1"></bean>
    
    <!-- 使用了利用组件扫描,不需要配置含有注解的类 -->
    <!-- <bean class="com.zk.smm.controller.ItemsHandlerController2"></bean> -->
                        
       
       
       
                        
	<!-- *处理器映射器,多个映射器可以并存 -->
	<!-- **通过bean的name映射 -->
	<bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"></bean>
	
	<!-- **简单url映射器,通过bean的id映射 -->
	<bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="mappings">
			<props>
				<prop key="/selectItems1.action">ItemsHandlerController1</prop>
			</props>
		</property>
	</bean>
	
	<!-- **3.1的注解的映射器,需要和注解的適配器配對使用 -->
	<!-- 
		由mvc:annotation-driven代替
		<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"></bean>
	-->
	
	
	<!-- 
		使用注解驱动可以代替注解映射器和注解适配器的配置;
		默认加载了许多参数方法,比如json转化解析器;
		实际开发用<mvc:annotation-driven></mvc:annotation-driven>
	-->
	<mvc:annotation-driven></mvc:annotation-driven>
	
	
	
	<!-- *处理器适配器 -->
	<!-- **简单适配器,返回的数据和视图使用ModelAndView对象,return -->
	<bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"></bean>
	
	<!-- **要求handler实现HttpRquestHandler接口,返回的数据和视图使用request对象,也可用reponse响应json数据 -->
	<bean class="org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter"></bean>
	
	<!-- **注解的适配器,需要和注解的映射器配對使用 -->
	<!-- 
		由mvc:annotation-driven代替
		<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"></bean>
	-->
	
	
	
	
	
	<!-- *视图解析器 --> 
	<!-- **解析jsp,默认使用jstl标签 -->            
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    	<property name="suffix" value=".jsp"></property>
    	<property name="prefix" value="/WEB-INF/view/"></property>
    </bean>
    
       
</beans>  